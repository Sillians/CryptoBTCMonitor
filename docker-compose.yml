version: "3"

services:
  warehouse:
    image: postgres
    container_name: warehouse
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./cryptobtcmonitor/postgres:/docker-entrypoint-initdb.d
      # - postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - postgres
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - postgres
    restart: always

  # pipelinerunner:
  #   image: pipelinerunner
  #   container_name: pipelinerunner
  #   build:
  #     context: ./
  #     dockerfile: ./containers/pipelinerunner/Dockerfile
  #   volumes:
  #     - ./:/code
  #   environment:
  #     WAREHOUSE_USER: ${POSTGRES_USER}
  #     WAREHOUSE_PASSWORD: ${POSTGRES_PASSWORD}
  #     WAREHOUSE_DB: ${POSTGRES_DB}
  #     WAREHOUSE_SERVER: ${POSTGRES_SERVER}
  #     WAREHOUSE_PORT: ${POSTGRES_PORT}

  # dashboard:
  #   image: metabase/metabase
  #   container_name: dashboard
  #   ports:
  #     - "3000:3000"

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin-data:
